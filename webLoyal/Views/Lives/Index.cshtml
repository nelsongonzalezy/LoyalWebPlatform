    @model core.Service.VidasResponseModel

            <div class="d-md-flex align-items-center justify-content-between mb-4">
                <div>
                    <ol class="breadcrumb fs-sm mb-1">
                        <li class="breadcrumb-item active"><a href="~/menu/index">@webLoyal.Resources.language.Resources.Menu</a></li>
                        <li class="breadcrumb-item"><a href="~/Policies/index">Polizas</a></li>
                        <li class="breadcrumb-item"><a href="~/Lives/index">Vidas</a></li>

                    </ol>
                <h4 class="main-title mb-0">Vidas</h4>
                </div>

            </div>
<div class="row g-3">
    <div class="col-xl-12">

            @await Component.InvokeAsync("PoliciesLivesList")
              
    </div>
    <div class="col-xl-12">

        <div class="row">
            @foreach (var producto in Model.CifrasPorProducto.OrderBy(x => x.CodigoPoliza))
            {
                <div class="col-3 col-xl-3">
                    @if (producto.CodigoPoliza > 0)
                    {
                        var estilo = string.Empty;
                        switch (producto.CodigoPoliza)
                        {
                            case 1:
                                estilo = "background-color:rgb(60,95,138)";
                                break;
                            case 2:
                                estilo = "background-color:rgb(141,195,65)";
                                break;
                            case 3:
                                estilo = "background-color:rgb(48,182,181)";
                                break;
                            case 4:
                                estilo = "background-color:rgb(132,26,102)";
                                break;
                        }


                        <div class="music-player mt-4 mt-xxl-5" style="@estilo">
                            <div class="media-music">
                                @switch (producto.CodigoPoliza)
                                {
                                    case 1:
                                        <a href="background-color:rgb(60,95,138)" class="media-img"><img src="~/assets/img/beyond.png" alt=""></a>
                                        break;
                                    case 2:
                                        <a href="background-color:rgb(141,195,65)" class="media-img"><img src="~/assets/img/privilege.png" alt=""></a>
                                        break;
                                    case 3:
                                        <a href="background-color:rgb(48,182,181)" class="media-img"><img src="~/assets/img/liberty.png" alt=""></a>
                                        break;
                                    case 4:
                                        <a href="background-color:rgb(132,26,102)" class="media-img"><img src="~/assets/img/legacy.png" alt=""></a>
                                        break;

                                }

                            </div>
                            <div class="media-body">
                                <h5><a href="" class="text-white">@producto.DescripcionPoliza</a></h5>
                                <h6 class="card-value text-white">Vidas: @producto.TotalPersonas</h6>
                                <h6 class="d-block fs-xs text-success">
                                    <span class="badge badge-pill bg-light">@producto.PorcentajeGrupoEdadSobreTotal.ToString("P2")</span>
                                </h6>
                            </div>
                        </div>
                    }
                </div>
            }


        </div>

    </div>

    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div id="chartejemplos"></div>
            </div>

        </div>

    </div>
</div>


                 <div class="row g-3">
                        <div class="col-xl-12">
                            <div class="card card-one mt-3">
                                <div class="card-body p-3">
                                    <div class="table-responsive">
                                        <table class="table table-borderless mb-0 dataTable-loading searchable">
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>NumeroPoliza</th>
                                                    <th>nombre Completo</th>
                                                    <td>Estado Certificado</td>
                                                    <td>TipoPersona</td>
                                                    <td>Sexo</td>
                                                    <td>Fecha Nacimiento</td>
                                                    <td>Edad</td>
                                                    <td>Peso</td>
                                                    <td>Talla</td>
                                                    <td>Imc</td>
                                                    <td>Producto</td>
                                                    <td>Plan</td>
                                                    <td>Pais</td>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.ListaPersonas.OrderByDescending(x => x.NumeroPoliza))
                                                {
                                                    <tr>
                                                        <td> <a class="btn btn-outline-tertiary" href="~/Policies/detail/@item.CodigoSolicitud"> @item.CodigoSolicitud</a> </td>
                                                        <td> <a class="btn btn-outline-tertiary" href="~/Policies/detail/@item.CodigoSolicitud"> @item.NumeroPoliza</a> </td>                  
              
                                                        <td>@item.NombreCompleto</td>
                                                        @switch (item.CodigoEstadoCertificado)
                                                        {
                                                            case "01":
                                                                <td> <span class="badge bg-warning"> @item.DescripcionEstadoCertificado</span> </td>
                                                                break;
                                                            case "02":
                                                                <td> <span class="badge bg-info"> @item.DescripcionEstadoCertificado</span> </td>
                                                                break;
                                                            case "03":
                                                                <td> <span class="badge text-bg-success"> @item.DescripcionEstadoCertificado</span> </td>
                                                                break;
                                                            case "04":
                                                                <td> <span class="badge bg-danger"> @item.DescripcionEstadoCertificado</span> </td>
                                                                break;
                                                            case "05":
                                                                <td> <span class="badge bg-info"> @item.DescripcionEstadoCertificado</span> </td>
                                                                break;
                                                            case "06":
                                                                <td> <span class="badge bg-danger"> @item.DescripcionEstadoCertificado</span> </td>
                                                                break;
                                                            case "07":
                                                                <td> <span class="badge bg-info"> @item.DescripcionEstadoCertificado</span> </td>
                                                                break;
                                                            case "08":
                                                                <td> <span class="badge bg-warning"> @item.DescripcionEstadoCertificado</span> </td>
                                                                break;
                                                            case "09":
                                                                <td> <span class="badge bg-warning"> @item.DescripcionEstadoCertificado</span> </td>
                                                                break;
                                                            default:
                                                                <td> <span class="badge bg-info"> @item.DescripcionEstadoCertificado</span> </td>
                                                                break;
                                                        }

                                                        <td>@item.DescripcionTipoPersonaCotizacion</td>
                                                        <td>@item.Sexo</td>
                                                        <td>@item.FechaNacimiento</td>
    
                                                        <td>@item.Edad</td>
                                                        <td>@item.Peso.ToString("###.##")</td>
                                                        <td>@item.Talla.ToString("###.##")</td>
                                                        <td>@item.Imc.ToString("###.##")</td>
                                                        @switch (item.CodigoPoliza.ToString())
                                                            {
                                                                case "1":
                                                                    <td><span class="badge" style="background-color:rgb(60,95,138);">@item.DescripcionPoliza</span></td>
                                                                    break;                                                               
                                                                    case "2":
                                                                    <td><span class ="badge" style="background-color:rgb(141,195,65);">@item.DescripcionPoliza</span></td>
                                                                    break;                                                                
                                                                    case "3":
                                                                    <td>
                                                                        <span class="badge" style="background-color:rgb(48,182,181);">@item.DescripcionPoliza</span>
                                                                    </td>
                                                                    break;                                                                
                                                                    case "4":
                                                                    <td>
                                                                        <span class="badge" style="background-color:rgb(132,26,102);">@item.DescripcionPoliza</span>
                                                                    </td>
                                                                    break;
                                                            }
                                                        <td>@item.DescripcionPlan</td>
                                                        <td>@item.DescripcionPais</td>
                                                    </tr>

                                                }

         
                                               
                                            </tbody>
                                        </table>
                                    </div>
                                </div><!-- card-body -->
                            </div>
                        </div><!-- col -->
                    </div><!-- col -->

@section Scripts{

   <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Obtener los datos del modelo y deserializarlos correctamente
            var data = JSON.parse('@Html.Raw(Json.Serialize(Model.CifrasPorRangos))');

            // Crear un objeto para almacenar los datos agrupados
            var groupedData = {};

            // Iterar sobre los datos y agrupar por descripcionPoliza y grupoEdad
            data.forEach(function (item) {
                var grupoEdad = item.grupoEdad;
                var descripcionPoliza = item.descripcionPoliza;
                var porcentaje = item.porcentajeGrupoEdadSobreTotal.toFixed(2);

                if (!groupedData[descripcionPoliza]) {
                    groupedData[descripcionPoliza] = {
                        name: descripcionPoliza,
                        data: {}
                    };
                }

                groupedData[descripcionPoliza].data[grupoEdad] = porcentaje;
            });

            // Convertir el objeto a un array de series
            var seriesData = Object.values(groupedData);

            // Obtener la lista de grupos de edad
            var gruposEdad = Object.keys(data.reduce(function (acc, item) {
                acc[item.grupoEdad] = true;
                return acc;
            }, {}));

            // Configurar el gráfico
            var options = {
                chart: {
                    height: 350,
                    type: "bar",
                },
                dataLabels: {
                    enabled: true
                },
                colors: ['#3C5F8A', '#8DC341', '#30B6B5', '#841A66'],
                series: seriesData.map(function (item) {
                    return {
                        name: item.name,
                        data: gruposEdad.map(function (grupoEdad) {
                            return item.data[grupoEdad] || 0;
                        })
                    };
                }),
                xaxis: {
                    categories: gruposEdad,
                },
                yaxis: {
                    axisTicks: {
                        show: true
                    },
                    axisBorder: {
                        show: true,
                    },
                    title: {
                        text: "Porcentaje"
                    }
                },
                tooltip: {
                    shared: false,
                    intersect: true,
                    x: {
                        show: false
                    }
                },
                legend: {
                    horizontalAlign: "left",
                    offsetX: 40
                }
            };

            var chart = new ApexCharts(document.querySelector("#chartejemplos"), options);
            chart.render();
        });


        //document.addEventListener("DOMContentLoaded", function () {
        //    // Obtener los datos del modelo y deserializarlos correctamente
        //    var data = JSON.parse('@Html.Raw(Json.Serialize(Model.CifrasPorRangos))');

        //    // Crear un objeto para almacenar los datos agrupados
        //    var groupedData = {};

        //    // Iterar sobre los datos y agrupar por descripcionPoliza y grupoEdad
        //    data.forEach(function (item) {
        //        var grupoEdad = item.grupoEdad;
        //        var descripcionPoliza = item.descripcionPoliza;
        //        var porcentaje = item.porcentajeGrupoEdadSobreTotal.toFixed(2);

        //        if (!groupedData[descripcionPoliza]) {
        //            groupedData[descripcionPoliza] = {
        //                name: descripcionPoliza,
        //                data: {}
        //            };
        //        }

        //        groupedData[descripcionPoliza].data[grupoEdad] = porcentaje;
        //    });

        //    // Convertir el objeto a un array de series
        //    var seriesData = Object.values(groupedData);

        //    // Obtener la lista de grupos de edad
        //    var gruposEdad = Object.keys(data.reduce(function (acc, item) {
        //        acc[item.grupoEdad] = true;
        //        return acc;
        //    }, {}));

        //    // Configurar el gráfico
        //    var options = {
        //        chart: {
        //            height: 350,
        //            type: "bar",

        //        },
        //        dataLabels: {
        //            enabled: true
        //        },
        //        colors: ['#3C5F8A', '#8DC341', '#30B6B5','#841A66'],
        //        series: seriesData.map(function (item) {
        //            return {
        //                name: item.name,
        //                data: gruposEdad.map(function (grupoEdad) {
        //                    return item.data[grupoEdad] || 0;
        //                })
        //            };
        //        }),
        //        xaxis: {
        //            categories: gruposEdad,
        //        },
        //        yaxis: {
        //            axisTicks: {
        //                show: true
        //            },
        //            axisBorder: {
        //                show: true,
        //            },
        //            title: {
        //                text: "Porcentaje"
        //            }
        //        },
        //        tooltip: {
        //            shared: false,
        //            intersect: true,
        //            x: {
        //                show: false
        //            }
        //        },
        //        legend: {
        //            horizontalAlign: "left",
        //            offsetX: 40
        //        }
        //    };

        //    var chart = new ApexCharts(document.querySelector("#chartejemplos"), options);
        //    chart.render();
        //});




        //document.addEventListener("DOMContentLoaded", function () {
        //    // Obtener los datos del modelo y deserializarlos correctamente
        //    var data = JSON.parse('@Html.Raw(Json.Serialize(Model.CifrasPorRangos))');
        //    //debugger;
        //    // Preparar los datos para el gráfico
        //    var seriesData = data.map(item => item.porcentajeGrupoEdadSobreTotal.toFixed(2)); // Redondear a 2 decimales
        //    var labels = data.map(item => `${item.grupoEdad}\ Vidas: ${item.totalPersonas}`);

        //    // Configurar el gráfico
        //    var options = {
        //        chart: {
        //            type: 'bar',
        //            height: 350,
        //            stacked: true
        //        },
        //        plotOptions: {
        //            bar: {
        //                dataLabels: {
        //                    position: 'top', // Colocar etiquetas arriba de las barras
        //                },
        //            }
        //        },
        //        dataLabels: {
        //            formatter: function (val) {
        //                return `${val}%`; // Personalizar el formato de las etiquetas
        //            },
        //        },
        //        series: [{
        //            name: 'Porcentaje',
        //            data: seriesData
        //        }],
        //        xaxis: {
        //            categories: labels,
        //        }
        //    };

        //    // Crear el gráfico
        //    var chart = new ApexCharts(document.querySelector("#chartejemplos"), options);

        //    // Renderizar el gráfico
        //    chart.render();
        //});


        $("table").DataTable({
            searchPanes: {
                viewTotal: true
            },
            searchBuilder: true,
            sort: true,
            resizable: true,
            responsive: true,
            class: 'table table-borderless mb-0 dataTable-loading searchable dataTable-wrapper no-footer sortable fixed-columns table-striped',
            fixedColumns: true,
            //order: [[0, "desc"]],
            dom: 'Bfrt<"col-md-6 inline"i> <"col-md-6 inline"p>',
            buttons: [
                {
                    extend: 'excelHtml5',
                    autoFilter: true,
                    className: 'btn btn-outline-primary',
                    filename: '@nameof(core.Service.LivesService)Excel',
                },
                {
                    extend: 'pdfHtml5',
                    className: 'btn btn-outline-primary',
                    filename: '@nameof(core.Service.LivesService)Pdf',
                }
            ]
        });

    </script>
}
